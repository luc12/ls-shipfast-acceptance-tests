buildscript {
  ext {
    junitVersion = '4.11'
    assertjVersion = '3.3.0'
    cucumberVersion = '1.2.4'
    seleniumVersion = '2.53.0'
    htmlunitVersion = '2.52.0'
  }

  repositories {
    mavenLocal()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'se.transmode.gradle:gradle-docker:1.2'
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  testCompile "junit:junit:$junitVersion"
  testCompile "org.assertj:assertj-core:$assertjVersion"
  testCompile "info.cukes:cucumber-java:$cucumberVersion"
  testCompile "info.cukes:cucumber-junit:$cucumberVersion"
  compile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
  compile "org.seleniumhq.selenium:selenium-htmlunit-driver:$htmlunitVersion"
}

task cucumber() {
  dependsOn assemble, compileTestJava
  doLast {
    javaexec {
      main = "cucumber.api.cli.Main"
      classpath = configurations.testRuntime + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', 'pretty', '--glue', 'com.shipfast.test', 'src/test/resources']
    }
  }
}

task startServices(type: Exec, group: 'docker') {
  // Define services
  commandLine 'echo', 'TBD'
}

task stopServices(group: 'docker') << {
  // Clean-up services
}

cucumber.dependsOn startServices
cucumber.finalizedBy stopServices

task createWrapper(type: Wrapper) {
  gradleVersion = '2.9'
}
